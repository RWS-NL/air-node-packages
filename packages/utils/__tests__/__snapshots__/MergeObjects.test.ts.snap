// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Merge Objects Function Snapshot 1`] = `
"function mergeObjects(objTarget, objSource) {
    for (const [key, value] of Object.entries(objSource)) {
        const targetValue = objTarget[key];
        if ((0, IsObject_1.isObject)(value)) {
            Reflect.set(objTarget, key, (0, IsObject_1.isObject)(targetValue) ? mergeObjects(targetValue, value) : value);
        }
        else if (!(0, IsObject_1.isObject)(targetValue)) {
            Reflect.set(objTarget, key, value);
        }
    }
    return objTarget;
}"
`;

exports[`Merge Objects mergeObjects(basic) 1`] = `
Object {
  "a": 0,
  "b": 1,
}
`;

exports[`Merge Objects mergeObjects(clone) 1`] = `
Object {
  "a": 0,
  "b": 1,
}
`;

exports[`Merge Objects mergeObjects(extended) 1`] = `
Object {
  "a": 0,
  "b": 1,
  "i": 2,
}
`;

exports[`Merge Objects mergeObjects(mutation) 1`] = `
Object {
  "a": 0,
  "b": 1,
}
`;

exports[`Merge Objects mergeObjects(mutation) 2`] = `
Object {
  "a": 0,
  "b": 1,
}
`;

exports[`Merge Objects mergeObjects(partial) 1`] = `
Object {
  "a": 0,
  "b": 1,
}
`;
