// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavigationDrawer Snapshot Testing Optional Props 1`] = `
<WithStyles(ForwardRef(Drawer))
  className="makeStyles-navigationDrawer-1 makeStyles-navigationDrawerOpen-2 makeStyles-navigationDrawerOpen-10"
  classes={
    Object {
      "paper": "makeStyles-drawerPaper-4 makeStyles-navigationDrawerOpen-2 makeStyles-navigationDrawerOpen-10",
    }
  }
  variant="permanent"
>
  <WithStyles(ForwardRef(List))>
    <WithStyles(ForwardRef(ListItem))
      button={true}
      classes={
        Object {
          "root": "makeStyles-closeListItem-6",
        }
      }
      disableGutters={true}
      onClick={[MockFunction]}
    >
      <WithStyles(ForwardRef(Grid))
        alignContent="stretch"
        alignItems="center"
        container={true}
        direction="row"
        justify="flex-end"
        wrap="nowrap"
      >
        <WithStyles(ForwardRef(Grid))
          classes={
            Object {
              "root": "makeStyles-navgationDrawerCloseIcon-7",
            }
          }
          item={true}
          xs={1}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <If
              condition={true}
            >
              <Then>
                <CloseIcon
                  color="primary"
                />
              </Then>
              <Else>
                <MenuIcon
                  color="primary"
                />
              </Else>
            </If>
          </WithStyles(ForwardRef(ListItemIcon))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(ListItem))>
  </WithStyles(ForwardRef(List))>
  <WithStyles(ForwardRef(Divider))
    classes={
      Object {
        "root": "makeStyles-divider-5",
      }
    }
  />
  <WithStyles(ForwardRef(List))>
    <Memo()
      icon={
        <WithStyles(ForwardRef(ListItemIcon))>
          <Memo(SendIcon) />
        </WithStyles(ForwardRef(ListItemIcon))>
      }
      key="0"
      label={
        <WithStyles(ForwardRef(ListItemText))
          primary="Send"
          primaryTypographyProps={
            Object {
              "color": "primary",
              "variant": "body2",
            }
          }
        />
      }
    />
    <Memo()
      icon={
        <WithStyles(ForwardRef(ListItemIcon))>
          <Memo(StarBorderIcon) />
        </WithStyles(ForwardRef(ListItemIcon))>
      }
      key="1"
      label={
        <WithStyles(ForwardRef(ListItemText))
          primary="Star"
          primaryTypographyProps={
            Object {
              "color": "primary",
              "variant": "body2",
            }
          }
        />
      }
    />
  </WithStyles(ForwardRef(List))>
</WithStyles(ForwardRef(Drawer))>
`;

exports[`NavigationDrawer Snapshot Testing Required Props 1`] = `
<WithStyles(ForwardRef(Drawer))
  className="makeStyles-navigationDrawer-1 makeStyles-navigationDrawerOpen-2 makeStyles-navigationDrawerOpen-9"
  classes={
    Object {
      "paper": "makeStyles-drawerPaper-4 makeStyles-navigationDrawerOpen-2 makeStyles-navigationDrawerOpen-9",
    }
  }
  variant="permanent"
>
  <WithStyles(ForwardRef(List))>
    <WithStyles(ForwardRef(ListItem))
      button={true}
      classes={
        Object {
          "root": "makeStyles-closeListItem-6",
        }
      }
      disableGutters={true}
      onClick={[MockFunction]}
    >
      <WithStyles(ForwardRef(Grid))
        alignContent="stretch"
        alignItems="center"
        container={true}
        direction="row"
        justify="flex-end"
        wrap="nowrap"
      >
        <WithStyles(ForwardRef(Grid))
          classes={
            Object {
              "root": "makeStyles-navgationDrawerCloseIcon-7",
            }
          }
          item={true}
          xs={1}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <If
              condition={true}
            >
              <Then>
                <CloseIcon
                  color="primary"
                />
              </Then>
              <Else>
                <MenuIcon
                  color="primary"
                />
              </Else>
            </If>
          </WithStyles(ForwardRef(ListItemIcon))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(ListItem))>
  </WithStyles(ForwardRef(List))>
  <WithStyles(ForwardRef(Divider))
    classes={
      Object {
        "root": "makeStyles-divider-5",
      }
    }
  />
  <WithStyles(ForwardRef(List))>
    <Memo()
      icon={
        <WithStyles(ForwardRef(ListItemIcon))>
          <Memo(SendIcon) />
        </WithStyles(ForwardRef(ListItemIcon))>
      }
      key="0"
      label={
        <WithStyles(ForwardRef(ListItemText))
          primary="Send"
          primaryTypographyProps={
            Object {
              "color": "primary",
              "variant": "body2",
            }
          }
        />
      }
    />
    <Memo()
      icon={
        <WithStyles(ForwardRef(ListItemIcon))>
          <Memo(StarBorderIcon) />
        </WithStyles(ForwardRef(ListItemIcon))>
      }
      key="1"
      label={
        <WithStyles(ForwardRef(ListItemText))
          primary="Star"
          primaryTypographyProps={
            Object {
              "color": "primary",
              "variant": "body2",
            }
          }
        />
      }
    />
  </WithStyles(ForwardRef(List))>
</WithStyles(ForwardRef(Drawer))>
`;
