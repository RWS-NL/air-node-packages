// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PanelGroup Snapshot Testing Many Props 1`] = `
<div
  className="panelGroup"
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "flexGrow": 1,
      "height": "100%",
      "minWidth": 150,
      "width": "100%",
    }
  }
>
  <Panel
    isFirst={true}
    isLast={false}
    key="0"
    onWindowResize={null}
    panelID={0}
    resize={1}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 0,
        "flexShrink": 0,
        "height": "100%",
        "minWidth": 100,
        "overflow": "hidden",
        "position": "relative",
        "width": 100,
      }
    }
  >
    <div
      key=".0"
    >
      panel 1
    </div>
  </Panel>
  <Divider
    borderColor="grey"
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider0"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={0}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={false}
    key="1"
    onWindowResize={[Function]}
    panelID={1}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".1"
    >
      panel 2
    </div>
  </Panel>
  <Divider
    borderColor="grey"
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider1"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={1}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={true}
    key="2"
    onWindowResize={null}
    panelID={2}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 0,
        "flexShrink": 0,
        "height": "100%",
        "minWidth": 100,
        "overflow": "hidden",
        "position": "relative",
        "width": 100,
      }
    }
  >
    <div
      key=".2"
    >
      panel 3
    </div>
  </Panel>
</div>
`;

exports[`PanelGroup Snapshot Testing Nested PanelGroup 1`] = `
<div
  className="panelGroup"
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "flexGrow": 1,
      "height": "100%",
      "minWidth": 146,
      "width": "100%",
    }
  }
>
  <Panel
    isFirst={true}
    isLast={false}
    key="0"
    onWindowResize={[Function]}
    panelID={0}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <PanelGroup
      borderColor="grey"
      direction="column"
      key=".0"
      panelWidths={Array []}
      showHandles={false}
      spacing={1}
    >
      <div>
        panel 1
      </div>
      <div>
        panel 2
      </div>
      <div>
        panel 3
      </div>
    </PanelGroup>
  </Panel>
  <Divider
    borderColor="grey"
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider0"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={0}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={false}
    key="1"
    onWindowResize={[Function]}
    panelID={1}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".1"
    >
      panel 4
    </div>
  </Panel>
  <Divider
    borderColor="grey"
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider1"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={1}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={true}
    key="2"
    onWindowResize={[Function]}
    panelID={2}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <PanelGroup
      borderColor="grey"
      direction="column"
      key=".2"
      panelWidths={Array []}
      showHandles={false}
      spacing={1}
    >
      <div>
        panel 5
      </div>
      <div>
        panel 6
      </div>
    </PanelGroup>
  </Panel>
</div>
`;

exports[`PanelGroup Snapshot Testing Optional Props 1`] = `
<div
  className="panelGroup"
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "flexGrow": 1,
      "height": "100%",
      "minWidth": 750,
      "width": "100%",
    }
  }
>
  <Panel
    isFirst={true}
    isLast={false}
    key="0"
    onWindowResize={null}
    panelID={0}
    resize={1}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 0,
        "flexShrink": 0,
        "height": "100%",
        "minWidth": 500,
        "overflow": "hidden",
        "position": "relative",
        "width": 500,
      }
    }
  >
    <div
      key=".0"
    >
      panel 1
    </div>
  </Panel>
  <Divider
    borderColor="brown"
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider0"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={0}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={false}
    key="1"
    onWindowResize={null}
    panelID={1}
    resize={1}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 0,
        "flexShrink": 0,
        "height": "100%",
        "minWidth": 256,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".1"
    >
      panel 2
    </div>
  </Panel>
  <Divider
    borderColor="brown"
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider1"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={1}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={true}
    key="2"
    onWindowResize={[Function]}
    panelID={2}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".2"
    >
      panel 3
    </div>
  </Panel>
</div>
`;

exports[`PanelGroup Snapshot Testing Required Props 1`] = `
<div
  className="panelGroup"
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "flexGrow": 1,
      "height": "100%",
      "minWidth": 146,
      "width": "100%",
    }
  }
>
  <Panel
    isFirst={true}
    isLast={false}
    key="0"
    onWindowResize={[Function]}
    panelID={0}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".0"
    >
      panel 1
    </div>
  </Panel>
  <Divider
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider0"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={0}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={false}
    key="1"
    onWindowResize={[Function]}
    panelID={1}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".1"
    >
      panel 2
    </div>
  </Panel>
  <Divider
    direction="row"
    dividerWidth={1}
    handleBleed={4}
    handleResize={[Function]}
    key="divider1"
    onResizeEnd={[Function]}
    onResizeStart={[Function]}
    panelID={1}
    showHandles={false}
  />
  <Panel
    isFirst={false}
    isLast={true}
    key="2"
    onWindowResize={[Function]}
    panelID={2}
    resize={2}
    style={
      Object {
        "backgroundColor": undefined,
        "display": "flex",
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "minWidth": 0,
        "overflow": "hidden",
        "position": "relative",
        "width": 256,
      }
    }
  >
    <div
      key=".2"
    >
      panel 3
    </div>
  </Panel>
</div>
`;
