// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot Testing AdditionalTest 1`] = `
<div
  className="navigation-bar actionBar"
  data-qa="snapshot-qa"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    container={true}
    direction="row"
    justify="space-between"
    style={
      Object {
        "height": "100%",
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
      key="1"
      xs={6}
    >
      <div
        data-qa="action-bar-custom-title"
      >
        text
      </div>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
      key="2"
      xs={6}
    >
      <Memo(Button)
        color="primary"
        data-qa="action-bar-button"
        label="label"
        onClick={[Function]}
        variant="contained"
      />
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;

exports[`Snapshot Testing Required Props 1`] = `
<div
  className="navigation-bar actionBar"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    container={true}
    direction="row"
    justify="space-between"
    style={
      Object {
        "height": "100%",
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
      key="1"
      xs={6}
    >
      <h1
        className="actionBarHeader"
        data-qa="action-bar-title"
      >
        42
      </h1>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
      key="2"
      xs={6}
    />
  </WithStyles(ForwardRef(Grid))>
</div>
`;

exports[`Snapshot Testing With Button 1`] = `
<div
  className="navigation-bar actionBar"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    container={true}
    direction="row"
    justify="space-between"
    style={
      Object {
        "height": "100%",
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
      key="1"
      xs={6}
    >
      <div
        data-qa="action-bar-custom-title"
      >
        text
      </div>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
      key="2"
      xs={6}
    >
      <Memo(Button)
        color="primary"
        data-qa="action-bar-button"
        label="label"
        onClick={[Function]}
        variant="contained"
      />
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;
